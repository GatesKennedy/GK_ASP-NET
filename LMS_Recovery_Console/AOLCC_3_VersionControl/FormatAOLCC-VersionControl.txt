MODULE~~1~~An Introduction to Version Control
OBJECTIVES~~Learning Objectives~~Explain what Version Control Systems are~~Differentiate between Git and GitHub
SUBMODULE~~A~~Course Overview
LESSON~~Estimated Course Completion Time~~16 hours of study
LESSON~~<p>Instructions:</p>~~<p>Tech Academy courses are designed on an increasing gradient of difficulty, with easier concepts placed toward the beginning and advanced concepts at the end. Later steps assume the student has completed all prior steps. Courses sometimes refer back to earlier content. The courses must be done in sequence, with each step fully completed before moving on to the next. Please do not skip around in courses.</p>
LESSON~~<p>Keeping track of the various stages of a software program as it is created is vital. If you find that you’re taking the wrong approach to a programming task, you need a way to get rid of the changes you made by reverting to an earlier version, before you tried that approach. Version control allows this, as well as other valuable actions related to managing the sometimes lengthy and complex process of making software.</p>~~<p>The purpose of this course is to teach students the basics of version control. It is a vital tool for software developers, particularly when they’re involved in a coding project that includes multiple developers. The ability to utilize version control is a skill that every developer must have, and you will obtain that skill in this course.</p>
LESSON~~QUIZ
QUESTION~~Which of the following is not part of version control?~~Upload code to a server~~Keep track of the various stages of software development~~Get rid of changes made to software and revert to an earlier version~~Manage code with multiple developers
LESSON~~<p>Source code: The set of computer instructions that make up a computer program, in such a form that a computer programmer can modify the instructions.</p>~~<p>Source code is the version of a computer program as it is originally written (i.e., typed into a computer in a programming language) by the designer of the program. Normally, when the programmer is done making the program, he has the computer convert the code he wrote the program in (the “source code”) to another format that is easier and faster for the computer to use. In that new format, the program can't be easily understood by people, but it is very useful to the computer. It also can't be modified by other developers at that point.</p>~~<p>EXAMPLE: Open-source software means developers can access and customize the source code of the software. </p>
LESSON~~<p>Version control: Also called “source control” or “revision control.” Version control is the tools and processes that are used to manage multiple versions of computer files as the files change over time.</p>~~<p>A Version Control System, or VCS, provides two primary data management capabilities. It allows users to 1) lock files so they can be edited by only one person at a time, and 2) track changes to files.</p>~~<p>When you create things using your computer you often revise them over time, such as documents, graphic images, computer programs and other items. Keeping track of the changes to these items over time is called “version control." It also includes the control of changes to items like this when more than one person can make changes them. </p>~~<p>A version is an exact snapshot of something at a specific point in time. If you wrote a song, that would be Version 1. If you later added bagpipes over the top of the song, that would be Version 2. Version control is managing different versions of things on a computer. This is used a lot when you are creating computer programs. </p>~~<p>EXAMPLE: If a team of writers is preparing a large textbook, and each writer can add, edit and remove content to the textbook at any time, they would find a Version Control System valuable to keep track of all changes as the textbook is written.</p>
SUBMODULE~~B~~An Introduction to Git and GitHub
LESSON~~<p>Git: A specific example of version control. Git is a popular Version Control System. You can use Git to manage the versions of your computer programs and work on programs in conjunction with other developers.</p>~~<p>Git is itself a computer program. A computer programmer can install the Git program on their computer and use it while creating software and websites.</p>~~<p>EXAMPLE: Git is free software, and is used by millions of computer programmers around the world.</p>
LESSON~~<p>GitHub: GitHub is a popular web site owned by Microsoft. It can be used to store source code, accomplish version control on that source code, track defects in that source code, and manage work tasks for the computer programmers working on that source code. </p>~~<p>EXAMPLE: As of 2018, GitHub was the largest host of source code in the world. </p>
LESSON~~QUIZ
QUESTION~~“Source control,” “revision control” and “version control” do not mean the same thing.~~False~~True
SUBMODULE~~C~~Welcome to the Course
VIDEO~~Welcome to the Course!~~https://ttamediaservices-uswe.streaming.media.azure.net/612bb07c-1b36-4a3d-8824-f8c0862a6909/Introduction%20to%20The%20Version%20Control%20Course.mp4
QUESTION~~_____ is tools and software that are used to monitor and manage the various versions of electronic files, as they’re being worked on.~~Version control~~Registry~~SQL~~Command line
LESSON~~<p>Software suite: A collection of computer programs that typically perform similar functions. These computer programs usually share a similar user interface.</p>~~<p>EXAMPLE: One of the most popular software suites is Microsoft Office 365. It includes several programs, including Word and Excel.  </p>
LESSON~~<p>Repository: A main location where data can be kept and handled.</p>~~<p>A repository is the central location where code for a particular program is stored.</p>~~<p>EXAMPLE: There are online repositories to store one’s code.</p>
LESSON~~<p>Project: An undertaking that typically has exact requirements and specifications. Projects are usually created following a plan.</p>~~<p>Within code editors (programs that developers use to write their code) websites and programs are typically saved as projects.</p>~~<p>EXAMPLE: If you were creating a portfolio website to showcase your accomplishments as a developer, the code for this site would be referred to as, and saved as, a project.</p>
LESSON~~<p>Branch: A duplication of code or a portion of it, so that changes can be made to it without affecting the original code.</p>~~<p>The purpose of branching is to allow a developer to edit a copy of the code without affecting the original code, as opposed to simply editing the original version of the code. Typically the developer later “merges” the branch — which means they integrate their edited code back into the original code.</p>~~<p>One of the benefits of branching is that it allows one to explore a different approach to solving a computing problem through writing code, while not stopping development work on the original code.</p>~~<p>EXAMPLE: If a developer wanted to explore an alternate method for sorting a large collection of financial records, they could create a branch of the original code and work on that alternative sorting approach while they, or other developers, continued to do other work on the original code. Then, when they had perfected the new approach to sorting the data, they could merge the changes they made back into the original code, which now had additional functions due to the continued work on that original code.</p>
LESSON~~QUIZ
QUESTION~~GitHub has repositories.~~True~~False
SUBMODULE~~D~~A Primer on Version Control Systems
LESSON~~<p>Version Control Systems</p>~~<p>In this course you will learn about various Version Control Systems (VCSs).</p>~~<p>A VCS is a specialized software suite that is used to maintain and track multiple versions of project files, also known as "source control" or "revision control.”</p>~~<p>VCSs consist of a repository where all of the project files are stored. This repository may be stored on the user’s hard drive. Whenever this is the case, these files are on a “LOCAL” repository. The original project files that are stored on another server’s hard drive (such as online storage) so that others can also access the files are on a “REMOTE” repository.</p>
LESSON~~<p>Version Control Systems</p>~~<p>While a team of developers are working on a project together, it is important that no two team members are editing the same content at the same time. If this happens, it is possible for one person to accidentally overwrite the changes made by someone else. For this reason, version control allows users to "check out" files for editing.</p>~~<p>When a file has been checked out from a shared file server, it cannot be edited by other users. When the developer finishes editing the file, he can save the changes and "check in" the file, effectively releasing that file so that other team members can edit the file.</p>
LESSON~~<p>Version Control Systems</p>~~<p>In a typical business scenario for a team of developers working together on a particular project, the main project files, known as “MASTER” repository files, are cloned (copied) to a developer’s local hard drive so that the developer may work with these files whether they are connected to the remote hard drive or not. Before a developer makes any changes to their copied files, they typically make a new “BRANCH” of all the copied files in the local repository. This creates all new versions of the original copied repository files. Essentially, these may be thought of as new instances of the files. Developers make new branches of the project files so that any new changes do not affect the original state of these files on the original branch. The original branch containing the original master file is referred to as the “master branch” while any additional branches are considered “sub-branches.”</p>
LESSON~~<p>Version Control Systems</p>~~<p>After the developer has created a sub-branch that is given a name distinct from the master branch to ensure differentiationdifferentially, the files may be altered and improved. In a Version Control System, each file in the local repository will have an associated file history attached to it. This history is updated with a short description and timestamp each time the file undergoes changes in the developer’s local repository. If the developer feels there are mistakes in a particular file, they may pick a save point on the file’s history timeline and revert this file back to its condition at that exact moment in time.</p>
LESSON~~<p>A file on one particular branch may be modified and thus will contain different data than that very same file on another branch, since they are no longer on the same plane of reality. Imagine a time traveler in a science fiction novel or film. The time traveler goes back to a certain point in time and makes an alteration. Because of this alteration, the time traveler’s “new” future is different from their previous future because a new branch in time is generated as soon as the time traveler makes an alteration in the timeline. Every successive change they make creates new branches in their reality.</p>~~<p>Luckily for developers, the VCS software remembers every change and associates it with a brief but concise description explaining each change made. All the developer has to do is read through these brief descriptions to help them determine the point in time to which they would like to revert the file.</p>
LESSON~~QUIZ
QUESTION~~What is the difference between “local” and “remote” repositories?
QUESTION~~What does “VCS” stand for?~~Version Control System~~Visual Computer Software~~Video Communication Systems~~Version of Conveyance Software
QUESTION~~___ is used to store source code, accomplish version control on that source code, track defects in that source code, and manage work tasks for the computer programmers working on that source code.~~GitHub~~Git~~Source code~~Database
QUESTION~~“Remote” refers to files stored on your hard drive, whereas “local” refers to files stored elsewhere.
QUESTION~~b“Local” refers to files stored on your hard drive, whereas “remote” refers to files stored elsewhere.
QUESTION~~Before a developer makes any changes to their copied files, they typically make a new _____  of all the copied files in the local repositoryThis creates all new versions of the original copied repository filesEssentially, these may be thought of as new instances of the filesDevelopers make new _____es of the project files so that any new changes do not affect the original state of these files on the original branch.~~aBranch~~bSource code~~cInstantiation~~dRepository
QUESTION~~Which one of the following terms does not mean the same thing as the others?~~File control~~Version control~~Source control~~Revision control
MODULE~~2~~na
OBJECTIVES~~Learning Objectives~~Explain the fundamentals of the Linux operating system and its history
SUBMODULE~~A~~Basic Terminology  <Template-blank>
LESSON~~<p>Merge: Merging is the action of combining various versions of a file or folder.</p>~~<p>In version control, “to merge” means to combine changes in files that exist in two or more different locations (or being handled by two or more developers). It is combining changes in data.</p>~~<p>EXAMPLE: If a developer wants to explore an alternate method for sorting a large collection of financial records, they could create a branch (a duplication of code or a portion of it, so that changes can be made to it without affecting the original code) of the original code and work on that alternative sorting approach while they, or other developers, continue to work on the original code. Then, when they’ve perfected the new approach to sorting the data, they could merge the changes they made back into the original code, which now has additional functions due to the continued work on that original code.</p>~~<p>When the two sets of code do not merge properly, this is referred to as a “merge conflict.” For example, if you attempt to merge code stored on your laptop with source code elsewhere, but someone has made changes to the exact section of the code you were working on, you might have a merge conflict.</p>
LESSON~~<p>Check in/out: "Checking in" code refers to adding the changes you made to a set of computer code into the code that is being managed by a Version Control System.</p>~~<p>Conversely, "checking out" code means marking a certain part of the code that is being managed by a Version Control System as being subject to modification. That section of code can then be managed by the Version Control System in such a manner that the system acts to prevent conflicts that could be caused if another person wanted to work on that exact same section of code simultaneously to your work on it.</p>~~<p>Checking in is sometimes referred to as “committing” code.</p>~~<p>EXAMPLE: If you were working on a team with two other developers on a computer program that tracked the students in a school, and you wanted to work on the part of the code that calculated grade point averages, you might "check out" that section of code. The Version Control System would then mark that section of code in some way, and could notify the other two developers that this section of code has been checked out, should they attempt to change it.</p>
LESSON~~<p>Network backbone: A backbone is a part of computer network that interconnects various pieces of a network, providing a path for the exchange of information between different subnetworks.</p>~~<p>This is the part of a computer network that connects various sections of the network and provides a path for information exchange between the various networks integrated into it.</p>~~<p>It is essentially a "senior" network containing a high capacity connection that forms the main link to various "junior" networks.</p>~~<p>EXAMPLE: If several offices are connected to a network, the network backbone is the main link connecting all of the offices. If this connection is a wireless connection, one would say, “Our company uses a wireless network backbone.”</p>
LESSON~~<p>Overhead: The cost associated with something. In business, overhead costs include rent, marketing expenses and payroll.</p>~~<p>In computers, “overhead” refers to the amount of work required of the computer to perform an action, such as running certain software. Overhead includes how much bandwidth is utilized, how much processing power is required, the amount of memory taken up, etc. by a particular website, program, etc.</p>~~<p>EXAMPLE: Microsoft Word takes more overhead than Notepad. </p>
LESSON~~<p>Iteration: “To iterate” means to say or do something again; to repeat something. An iteration is the act of repeating. “Iteration” means to go through a defined series of actions, repeating them a certain number of times. Usually this defined series of actions is repeated a particular number of times, or until a condition is met.</p>~~<p>EXAMPLE: Computer programs are usually created in iterations: Coming up with a basic working version, reviewing the program for mistakes to correct and improvements to make, doing that work, and repeating. This can be continued indefinitely.</p>
LESSON~~<p>Shell: A type of program that provides a user interface between the user and the operating system. You can use the shell to locate files, start and stop other programs, etc.</p>~~<p>Some shells provide a graphical interface, where visual objects on the screen are used to represent the files and programs on the computer. Other shells provide a text-only interface.</p>~~<p>EXAMPLE: You might use a shell to look at all the files in one section of your computer.</p>
LESSON~~QUIZ
SUBMODULE~~B~~The Uses of Version Control
LESSON~~<p>The Uses of Version Control</p>~~<p>Sometimes it is beneficial to save different versions of the same document.</p>~~<p>Anyone familiar with Microsoft Word has probably seen document names such as CollegeEssay_1.docx or CollegeEssay_2.docx or Essay15FINALVERSION.docx.</p>~~<p>When you get into software development, where there may be hundreds or thousands of changes in a software’s lifecycle (the creative process of software from start to finish — planning, development, testing, etc.), this quickly becomes unsustainable.</p>~~<p>A Version Control System (VCS) solves this problem, among many others.</p>
LESSON~~<p>Version Control Systems</p>~~<p>A VCS doesn’t work by saving complete copies of each new version; it works by saving only the changes. This is useful for getting the latest version of a document, as well as getting any version in the document’s history.</p>~~<p>Software developers often have the need to revert a program’s code to the “last working version.” Comparing this “working version” to the current “broken” version makes bug-fixing easier.</p>
LESSON~~<p>Version Control Systems</p>~~<p>A Version Control System also makes team development possible, even with remote team members. With a centralized repository of document changes, developers can easily download the latest version and edit it. Once they are done, they just check the edited version in to this main repository for the other team members to view and edit.</p>~~<p>Of course, having two developers work on the same document can cause problems. Version Control Systems utilize two distinct methods for enabling this type of collaboration. The first solution is to enable a developer to “lock” a file that is being edited. In other words, while the file is being edited, no other team member can edit it. Others can download it and view it, but they cannot make changes.</p>
LESSON~~<p>Version Control Systems</p>~~<p>The obvious problem with this solution is that it slows development. Some programs have one file that is bigger and more trafficked than others. To stop production while one developer edits it seems a waste. Also (as has happened) what if the developer forgets to unlock the file and takes a long weekend?</p>~~<p>This is solved by the “copy-modify-merge” method. Any number of developers can download a file and edit it. When sending the edited file back to the server, the server checks if the file being sent is “up to date” with any changes that were sent before it. If the file is “out of date,” the server shows the developer which changes were made and forces the developer to integrate those changes into the current document. Usually developers aren’t working on the same portion of the same document, so these changes are typically easy to integrate.</p>~~<p>The VCS known as Git, utilized through the Github interface, follows the copy-modify-merge method and has made it possible for software development to occur amongst hundreds of developers simultaneously. It has opened the door to “open-source software development” projects that have helped revolutionize the world of technology.</p>
LESSON~~QUIZ
QUESTION~~Which of the following does version control make copies of?~~Only the changes that were made~~Complete copies of each version 
SUBMODULE~~C~~Working with the Linux Operating System
VIDEO~~Linux~~https://ttamediaservices-uswe.streaming.media.azure.net/8ce74c80-1e03-4548-975e-2968ced8a318/linux.mp4
LESSON~~QUIZ:~~~~What does GNU stand for?
LESSON~~<p>A Note About The Videos in This Course:</p>~~<p>In the Computer and Technology Basics Course and Overview of Software Development Course, Erik Gross (Co-Founder of The Tech Academy) acted as the Instructor in most of the videos — covering topics contained in scripts written by him and Jack Stanley (the other Co-Founder of The Tech Academy).</p>~~<p>All of the videos in this course follow scripts written by Jack Stanley and Erik Gross, the authors of The Tech Academy’s curriculum. Daniel Christie is the Instructor in most of the videos in this course. Daniel is an experienced developer, a graduate of the Software Developer Boot Camp, and a long-time Tech Academy employee. Enjoy!</p>
QUESTION~~Which of the following is a version control tool that can ensure multiple developers don’t change the same code?~~Locking the file being edited~~Deleting folders in the repository~~Saving data~~Checking in code
MODULE~~3~~na
OBJECTIVES~~Learning Objectives~~Describe Git~~Install Git~~Write basic Git commands
SUBMODULE~~A~~Different Types of Version Control Systems
VIDEO~~Version Control Systems Animated~~https://ttamediaservices-uswe.streaming.media.azure.net/5495fc8e-dd91-4eae-ae88-3cd59c21a23d/1_Intro%20to%20VCS.mp4
QUESTION~~What is the difference between a centralized and a distributed VCS?~~A centralized VCS has one master repository, whereas a distributed VCS is housed on developers’ local hard drives~~A distributed VCS has one master repository, whereas a centralized VCS is housed on developers’ local hard drives
LESSON~~<p>GIT AND GITHUB</p>~~<p>Unix is an open-source and extremely popular operating system created in the early 1970s by the technology company AT&T. </p>~~<p>Git is a Unix-based Version Control System software that uses special commands typed into a command line module. Git provides the tools necessary for the developer to manage a local repository of files on their local hard drive.</p>~~<p>GitHub is a file repository hosting service that provides tools to share project files with other registered members of the community. GitHub also provides automated solutions to assist with file versions being committed by several users at the same time.</p>~~<p>The GitHub Desktop Application is a Version Control System that bridges the gap between the tools already built in to the GitHub website and provides the user with a visual solution to easily manage their repository files on both their local hard drive and the remote GitHub server.</p>
LESSON~~<p>BASH</p>~~<p>“Bash” is short for “Bourne Again SHell,”  a command-line user interface for Unix. </p>~~<p>A command language is a programming language made up mostly of commands that are mainly used for communicating with the operating system of a computer. Bash is a shell and a command language. Users can type commands that cause actions in the bash. </p>
QUESTION~~Which of the following is a benefit of the GitHub Desktop Application?~~It allows users to manage their repository files on both their hard drive and the remote GitHub server~~It is easier to use than Git~~It installs faster than Git and takes up less storage space on your hard drive~~It is the most robust Version Control System in existence
VIDEO~~Understanding VCS Basics~~https://ttamediaservices-uswe.streaming.media.azure.net/46e208ef-a068-4ad9-b0d3-eadadde9117d/2_Understanding%20VCS%20Concepts.mp4
LESSON~~QUIZ
QUESTION~~Which one of the following terms means “the current state of locally stored project files not yet added to the master repository”?~~Working set~~Repository~~Commit~~Add
SUBMODULE~~B~~Working with Git
LESSON~~<p>Tutorials</p>~~<p>This course contains many video tutorials. In these tutorials, the Instructor performs various actions on his computer. You are expected to follow along, performing the same actions on your computer.</p>~~<p>Do not just watch tutorials. Copy what the Instructor is doing on your own computer. For example, if the Instructor is showing you how to use a Version Control System, you should follow along, duplicating their actions.</p>~~<p>This is typically done as follows:</p>~~<img src="cid:Image_0.png" />~~<p>You don’t have to have an external monitor — this is just an example.</p>~~<p>You gain skills by doing. A chef masters preparing meals through cooking. A pilot learns to fly an aircraft by flying. As a coder, you will only become skilled through writing code. </p>
VIDEO~~Installing Git~~https://ttamediaservices-uswe.streaming.media.azure.net/2c6b8846-39de-4de0-ae6c-1d0426a81240/Install%20Git%20for%20Windows.mp4
SUBMODULE~~C~~Becoming Familiar with Git Terminology
LESSON~~<p>Directory: A directory is something (such as a book) which contains listings of information in an organized manner.</p>~~<p>Technically, a folder and directory are the same thing. The only difference is that “folder” refers to a visual representation of a directory, meaning that folders are icons representing directories on the computer. </p>~~<p>EXAMPLE: Your written documents could be stored in one directory while your pictures could be stored in another. </p>~~<p>The root directory is the first or top directory in your computer. The root directory for Windows is: C:/Windows<img src="cid:Image_0.png" /></p>
LESSON~~<p>OneDrive: A service provided by Microsoft for storing files online. </p>~~<p>EXAMPLE: You could back up your hard drive on OneDrive and share the data with other people. </p>
LESSON~~<p>INI file format: “INI” is short for “initialization.” INI files are used by the Windows operating system, typically to lay out operating instructions for the OS and some programs. </p>~~<p>EXAMPLE: Usually the instructions to the computer that enables the use of a mouse are stored .ini files. </p>
LESSON~~<p>.docx file format: “Docx” is short for “document XML.” XML is extensible markup language. This means that developer can create their own document structure, and then use XML to specify markup instructions for the data in those documents. Tags are the markup language words that usually have two parts, a start tag and an end tag. They have these symbols before and after them: < and >.  XML is similar to HTML except that the code itself can be customized (i.e., the developer can create their own tags).</p>~~<p>The .docx file format is the format in which Microsoft Word documents are typically saved. Previously, Word used the .doc format. </p>~~<p>EXAMPLE: If you attempted to open a .docx file in a program that doesn’t support Word document formats, you would either get an error message or a scrambled document. </p>
LESSON~~<p>Touch: A command-line interface program for Unix that is used to update date information, such as changing the date that a file or directory was modified or accessed. Touch can also be used to create or open a file. </p>~~<p>EXAMPLE: You could type “touch dogstory.docx” in the Git command line to create a blank Microsoft Word document entitled “dogstory.”</p>
LESSON~~<p>Tilde: The ~ symbol. Pronounced “tilda.”</p>~~<p>EXAMPLE: The tilde is placed over certain letters in some Spanish words as an accent, such as the word “señor.”</p>
LESSON~~<p>Command-line option: A command-line option or simply “option” (also known as a “flag” or “switch”) modifies the operation of a command; the effect is determined by the command's program. In many CLIs, these options are written by typing a hyphen, followed by the desired option (or switch).</p>~~<p>EXAMPLE: The command "ls" tells the computer to list the files in the current directory. Adding the switch "-lS" will modify the command so that the list of files is sorted from largest file size to smallest. That command and switch would look like this:</p>~~<p>ls -lS</p>
LESSON~~~~True~~“Folder” and “directory” mean virtually the same thing~~False
QUESTION~~What is the .ini extension short for?~~Initialization~~Initial~~Initialize~~Initializing
LESSON~~~~SUBMODULE~~D~~Getting to Know Git Bash
LESSON~~QUIZ
QUESTION~~Which of the following commands do you type to list a directory?~~ls~~list_dir~~ldir~~ld
LESSON~~<p>Working directory: Also called “current working directory (CWD),” “current directory” or “working tree.” The directory you are currently working in as a developer. </p>~~<p>EXAMPLE: In the following file path, the working directory would be “Docs”:</p>~~<p>C:WindowsDocsLetter.docx</p>
LESSON~~<p>Staging: The step prior to the commit process in Git. A staged file is a file that you have marked to be included in your next commit. Staging is basically a loading dock where you can determine which changes you will commit. You can perform actions in the staging area, such as temporarily storing your changes.</p>~~<p>EXAMPLE: The following diagram shows the staging area:</p>~~<img src="cid:Image_0.png" />
QUESTION~~How do you pronounce the name for the symbol “~”?~~Tilda~~Tilday~~Tildoe~~Tildee
QUESTION~~What does the command “cd” stand for when entered in the command line?~~Change directory~~Compact disk~~Channel directory~~Compact directory
